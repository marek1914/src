Vivado
http://xilinx.eetrend.com  

Processing System(PS) 即 ARM Cortex-A9 MPCore,  Programmable Logic(PL)即 FPGA

FSBL: First Stage Boot Loader

FPGA软核，Altera: Nios II, Xilinx: Picoblaze/Micoblaze

PS 与 PL 通过 AXI_HP、AXI_GP、AXI_ACP 接口通讯

zynq 020 400pin  做一个 arduino大小的， 6层板  并没有将所有引脚引出

ZYNQ:
XC7Z010/20 账户 gxxjxx:200w(six 0)
跳线：JP1 决定SD卡还是SPI启动

官方仅支持ubuntu12.10，ubuntu，带有各种库，带有gcc编译器
官方解压300M+

You need a SD card with two partitions (boot and root file system)

ubuntu12.10，会不会遇到编译问题？ 这与交叉编译开发形式完全不同

ubuntu-core (有pi2 pi3 版本)

zc702 是xilinx官方板子

ubuntu core 跟 kernel版本的关系，应该不是特别紧密吧

ubuntu core 最新的只维护16，找就的：
http://old-releases.ubuntu.com/releases/ubuntu-core/releases/

http://releases.ubuntu.com/

3个版本：米尔的12.04 桌面版， xilinx官方12.10 ubuntu-core版， ubuntu官方12.04版
脱离米尔，从官网下载开始整理，驱动方面，只要网口通了就行

-----
我的开机打印（用米尔 boot.bin）

U-Boot 2013.10-svn7 (Apr 20 2015 - 20:49:24)

Memory: ECC disabled
DRAM:  1 GiB
myir_board_init
MMC:   zynq_sdhci: 0
SF: Detected W25Q128BV with page size 256 Bytes, erase size 4 KiB, total 16 MiB
*** Warning - bad CRC, using default environment

In:    serial
Out:   serial
Err:   serial
Net:   Gem.e000b000
Hit any key to stop autoboot:  0 
Device: zynq_sdhci
Manufacturer ID: 9c
OEM: 534f
Name: USD00 
Tran Speed: 50000000
Rd Block Len: 512
SD version 3.0
High Capacity: Yes
Capacity: 14.7 GiB
Bus Width: 4-bit
reading uEnv.txt
** Unable to read file uEnv.txt **
- load to PL...
** No boot file defined **
zynq-uboot> version

U-Boot 2013.10-svn7 (Apr 20 2015 - 20:49:24)
arm-xilinx-linux-gnueabi-gcc (Sourcery CodeBench Lite 2011.09-50) 4.6.1
GNU ld (Sourcery CodeBench Lite 2011.09-50) 2.21.53.20110905
zynq-uboot> 

创建BOOT.bin需要文件
1 u-boot.elf：在Linux下编译后生成u-boot文件，再强制改名为u-boot.elf文件，得到之。
2 zynq_fsbl_0.elf：在EDk下创建得到之。
3 system.bit:：在PlanAhead中生成的bit文件；该文件不是必须的，没有该文件时，相当于把Zynq只当ARM来用。

Setting up the SD card to boot on a Zynq board is very straightforward and doesn't require putting the bootloader in the MBR or other fancy filesystem tricks. 
The ISE software is not required once you have the boot.bin file.

    As other answers have said, you need to put the SD card into an SD card reader, and connect it to your computer.
    You need the SD card formatted as a FAT partition (Windows would do this by default).
    Simply copy the boot.bin to the card, as a normal file.
    See http://www.wiki.xilinx.com/Prepare+Boot+Medium for detailed steps to do this in Linux.

If you're booting up an OS like Linux, you'll need extra files there too. 
See http://www.wiki.xilinx.com/Prepare+boot+image (the FSBL and u-boot are included in the boot.bin that you have).


7z020:  vivado projects of device xc7z020
ip:     xylon's display ip and evaluation license

------
Zynq-7000S 单核A9
Zynq-7000  双核A9 7010/7015/7020 Artix-7 family programmable logic


pynq-Z1  512M DDR3(IS43TR16256A-125KBL  256*16bit) + 16M Quad-SPI Flash 

(米尔用的 MT41K256M16HA-125 2片，共1G，ywy也用的这个) 
MT41K 和 IS43 引脚完全一样
125K 代表速度 1600k
96 ball  16x6

ddr 的数据线 是可以乱序的，为了布线方便，这个几年前就确认过，pynq就是乱序的

XC7Z020-1CLG400C

IS43TR16256A-125KBL
S25FL128SAGMFI

pynq 硬件库叫 overlays


电源芯片 TPS65400RGZ 淘宝很贵
ywy 用的tps65261

mier用的啥？


USB 用了 TUSB1210 芯片  是480M 收发器
zynq 自己不带USB？
米尔用的 USB3320C

trenz zynqberry， 有很多型号，较贵

trenz 用 z-7007s 做的 arduino 大小的 板子 卖900多

trenz-electronic.de

myir Z-Tune 800+

-------
free WebPACK version of Xilinx Vivado
Xilinx SDK software development environment


---------------
https://github.com/Xilinx/PYNQ/blob/v2.0/boards/Pynq-Z1/base/notebooks/audio/audio_playback.ipynb
看看这个怎么玩

------
ywy给的2个 SDK  大小相差悬殊，一个能装，一个不能装
Xilinx_Vivado_SDK_2017.3.1
Xilinx_Vivado_SDK_2017.3   --- 这个能装
2年前给我的
Xilinx_Vivado_SDK_2015.4_1118_2

基于java的，多平台共用，类似cube
执行 xsetup， ubuntu安装在 /opt/Xilinx 目录



---yw 平台 0112 start
1 28V供电，加到17V 指示灯开始量
MAX3491  RS485


-----
http://www.wiki.xilinx.com/2017.3+U-boot+Release+Notes

u-boot:
https://github.com/Xilinx/u-boot-xlnx

wiki.xilinx.com/Build+U-Boot

wiki.xilinx.com/Getting+Started

http://www.wiki.xilinx.com/Technical+Articles#TRD  重要文档

PetaLinux tools

XC7Z045

The Xilinx tools provide the following cross toolchains:
Zynq-7000 (CodeSourcery - soft float)  arm-xilinx-linux-gnueabi-
Zynq-7000 (Linaro - hard float)        arm-linux-gnueabihf-


ywy 编译 boot(不是u-boot) 用的是 arm-none-eabi-gcc 

/opt/Xilinx/SDK/2017.3/gnu/aarch32/lin/    目录有2套编译器

arm-none-eabi-
arm-linux-gnueabi-

用 -### 参数看， 应该是一套代码，2套参数编译出来的
明显区别：
前者 Thread model: single
后者 Thread model: posix
其他参数也有很多区别


XC7Z045 的官方开发板 Zynq ZC706  PCI卡
u-boot 配置 zynq_zc706_config
那么编译u-boot 用哪个编译器？





petalinux kernel  登录 root:root


u-boot-xlnx-xilinx-v2017.3/board/xilinx/zynq/zynq-zc706




spl 目录的 u-boot-spl 不能用


ok的 默认配置走的是 include/configs/xilinx_zynqmp.h
fail的 配置有的是   include/configs/zynq-common.h

-----------------
0115  

编译方法：!!!!!!!!!!!!!
https://www.cnblogs.com/sepeng/p/7891562.html

phone xxx 错误，修改方法
http://blog.csdn.net/x356982611/article/details/78183639
arm/layers/core/meta/lib/oe/terminal.py  修改这个文件

petalinux  编译器路径 tools/linux-i386


----
uart1 改 uart0 通过修改 dts 成功了，但不去找 image.ub文件，最终要靠 petalinux tool 包 生成

XSCT (Xilinx Software Command-Line Tool


IMPORTANT: PetaLinux tools require your host system "/bin/sh" is bash. If you are using Ubuntu
distribution and your "/bin/sh" is dash, you can consult your system administrator to change your
default with sudo dpkg-reconfigure dash command.

IMPORTANT: PetaLinux v2017.3 works only with Vivado 2017.3.

下载的 xilinx-zc706-v2017.3-final.bsp 是tar.gz 格式


疑问：
kernel源码在 petalinux-v2017.3-open_components 5G大小的那个组件里面，而昨晚仅下载了
petalinux-v2017.3-final-installer.run，  那 image.ub 怎么编译出来的呢？
直接搜kernel 文件搜不到，应该在那些 压缩文件里面


----
在家里电脑成功了，在公司服务器上： unable to open devshell
解决：sudo apt-get install  screen




---
好的板子 显示 eth0，
不好的 ifconfig -a 显示了 can0， 这是can总线

---
u-boot 被临时解压在：
petalinux_7045/build/tmp/work/plnx_arm-xilinx-linux-gnueabi/u-boot-xlnx

貌似是从 github的xilinx 上现下载的


u-boot 的 menuconfig 好像不是所有选项都能配置
比如
CONFIG_PHY_MARVEL
CONFIG_PHY_ATHEROS
在 include/configs 里面的 .h 文件中写死，不能 menuconfig 配置
=======
-----
pynq 是 ISSI 单片 16bit DDR3
ywy 7045 板子 2片 MT41K256M16HA-125IT  2片16bit，拼成32bit

我自己的照抄 pynq 用ISSI


ISSI 官网只有8bit 和 16bit 的，没有32bit的 DDR3

-----
petalinux-config --get-hw-description
petalinux-package --boot --format BIN --fsbl images/linux/zynq_fsbl.elf --fpga Beamcontrol_SYS_TOP.bit --u-boot --force


petalinux-create -t apps --template c --name fpgaload --enable
生成路径 project-spec/meta-user/recipes-apps


petalinux-create -t apps --template c --name fpgaload --enable
petalinux-create -t apps --template c --name fpgaload-init --enable
petalinux-create -t apps --template c --name flashwrite --enable



编译完，说在 
build/tmp/work/cortexa9hf-neon-xilinx-linux-gnueabi/fpgaload/1.0-r0$ 但并没有找到
petalinux-build -c fpgaload -x do_install  (必须加这个才会出现)
build/tmp/work/cortexa9hf-neon-xilinx-linux-gnueabi/fpgaload/1.0-r0 在这里
---
加载 基地址 0x43c00000




kernel 源码目录
build/tmp/work-shared/plnx_arm/kernel-source/
生成文件在:
build/tmp/work/plnx_arm-xilinx-linux-gnueabi/linux-xlnx/4.9-xilinx-v2017.3+gitAUTOINC+f1b1e077d6-r0/linux-plnx_arm-standard-build/drivers/net/phy/at803x.o

编译路径
build/tmp/work/plnx_arm-xilinx-linux-gnueabi/linux-xlnx/4.9-xilinx-v2017.3+gitAUTOINC+f1b1e077d6-r0/linux-plnx_arm-standard-build/kernel/fork.o



有没有命令 能读 phy 的寄存器


component 里面带了 ethtool-4.6.tar.gz

直接执行 petalinux-build -c ethtool

./build/tmp/work/cortexa9hf-neon-xilinx-linux-gnueabi/ethtool/4.6-r0/build/ethtool  可执行程序


自己板子：
root@peta_test:/run/media/mmcblk0p1# ./ethtool -d eth0
Offset          Values
------          ------
0x0000:         1c 00 00 00 40 a1 0e 01 06 00 00 00 00 00 00 00 
0x0010:         00 40 04 3f 00 30 04 3f 00 00 00 00 09 f3 ff 07 
0x0020:         00 00 00 00 00 00 00 00 00 30 04 3f 00 30 04 3f 
0x0030:         00 00 00 00 10 0f 18 00 00 00 00 00 00 00 00 00

Miry:
root@peta_test:/run/media/mmcblk0p1# ./ethtool -d eth0
Offset          Values
------          ------
0x0000:         1c 00 00 00 43 a1 0e 01 06 00 00 00 00 00 00 00 
0x0010:         38 30 04 3f 60 20 04 3f 00 00 00 00 09 f3 ff 07 
0x0020:         0c 00 00 00 0c 00 00 00 60 20 04 3f 60 20 04 3f 
0x0030:         00 00 00 00 10 0f 18 00 00 00 00 00 00 00 00 00 

奇怪，phy id区域的值不对


kernel  libphy

上电 先加载 2片 fpga 再加载cali值

include/linux/gpio/consumer.h:void gpiod_set_value(struct gpio_desc *desc, int value);

devm_gpiod_get_optional


看 document/gpio 的说明

---------------------------------------
peta的编译系统真的是太烂太烂了

把 goahead源码拷贝到

build/tmp/work/cortexa9hf-neon-xilinx-linux-gnueabi/goahead/1.0-r0
竟然就编译通过了！你麻痹呀
编译过程还是很诡异


当然，前提是线 -c 建立了 goahead 工程


tools/common/petalinux/bin:
petalinux-boot  
petalinux-build  
petalinux-config  
petalinux-create  
petalinux-package  
petalinux-util

不是脚本而是 bin elf


bitbake  自动化编译工具

yocto 帮助定制linux系统 











----------------
AXI EMACLITE Linux driver     关键词  emaclite  应该是 ethernet MAC 模块的名称






---------修改kernel的方法， 非常麻烦：
1 在修改的目录 git commit
2 git format-patch -1 生成 ***.patch
3 创建目录 project-spec/meta-user/recipes-kernel/linux/linux-xlnx
3 拷贝patch文件到这个目录
4 在这个目录创建 linux-xlnx_%.bbappend 文件：
  SRC_URI_append = " file://0001-modify-phy-addr.patch"
  FILESEXTRAPATHS_prepend := "${THISDIR}/${PN}:" 
