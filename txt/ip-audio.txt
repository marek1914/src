期望 1000片

SRAM 分同步和异步

STM429开发板 ISSI IS42S16400 是同步型

SPI SRAM 最完美，但没合适芯片:
Microchip 23LC1024 128K byte 容量小 10+，有arduino shield 用4片组成512k
ISSI IS62WVS5128   5128前面的S 代表serial 即spi 淘宝没有买的
cypress CY15B104Q 4MBit F-RAM(铁电随机存储器) 不是 sram
IPS3204JSQ 4MBit 淘宝没有卖

48pin 的需要借助 373锁存器
F103RC(256+48) 降成本可被选

总硬件成本 30元
F401RC(256+64 RMB:9.0)/F401RB(128+64) 
W5500(RMB:10) + IS62WV5128BLL-55HLI (RMB:6+) + cs4344 + SGM8904

256kByte 应该也够用， 只是用来缓冲ip包，能缓冲10s，

如果用G711 编码， 单 F103C 也不够，因为f103C 只有20k ram， 实在太小了
8k采样x1字节 = 8k字节/s   64kbs
 
用G723/G729  64K内存也够

G723 还是G729呢？   我不知道到了实际环境中， 具有缓冲5s数据能力，够不够
用UDP推流

用了G723/9 后 只有 <8kbps   每秒 1K 字节，内存足够了，  需要比较强的运算能力，而这正式F401的强项

还是要有缓存，网络环境复杂，没有足够的缓冲绝对不行，大不了到时候不焊接！

256Kx8 有啥区别
IS62WV2568ALL/BLL
IS62WV2568EALL/EBLL
IS62WV2568FALL/FBLL

IS62WV2568BLL  RMB:7+

同样是 -2568或 -5128 官网有很多类型: High Speed, PowerSaver  还分 62/65 不知道哪个最便宜

5128BLL 还分多种封装
-55T2LI 1.27间距，20x11 mm 太大了(资料Page3 右面原理图)
-55HLI  0.5间距  13x8mm   应该要这个(资料Page3 左面原理图 sTSOP ok)
-55TLI  0.5间距  20x8mm 

F407-Disc  用的 CS43L22

st官方f103 用的 AK4343 有I2c 配置接口
cs4344 和 cs43l22 有啥区别，为啥参考设计用后者


用cs4344 实现mp3播放
http://www.stmcu.org/module/forum/thread-599855-1-1.html
http://www.openedv.com/posts/list/5143.htm
https://www.amobbs.com/thread-4288855-1-1.html?_dsign=dac01d7b

PT8211/TM8211


pwm DAC 好像只能实现到8bit

从垃圾堆里 拆出了  CE2752  和  CS4354  还都是 SOP 大封装，，，， 可以实验了

------ 20171126 ------
其实是没啥劲的工作，只是无所事事而已





----- SPI ----
NSS 是片选


---- I2S ----
为啥会有 时钟误差呢？  cube -> configuration 选项卡 点击 I2S 会看到各种频率下的误差

F401RC 有专门的 i2s clk 输入引脚，能产生比较精确的
F103RC 没有这个引脚


不用外部晶体， 音频时钟不需要特别精确




-----

github.com/adafruit/Ethernet2
github.com/njh/EtherSia





----软件----
freertos  g723/g729  

g723/g729 还是复杂，就G711 ，先把东西做出来，已经很累了，我的能力也就这样，

20171127 最终决定加 512k内存 大不了不贴 ，用G711 编码，这样前端也简单
就算16k采样 16k字节/s  也足够缓冲的了

必要时可以考虑 373锁存器

这个方案 已经够简洁，  在运算能力，内存能力 上也具有一定的可扩展性

用 RTP 推流

--- 晶振配置 ---
1 使用内部晶体 16MHz 主频工作在 84MHz(直接输入
2 I2S 晶振配置为:
  50MHz时 fs=22k 误差 0.03%
  如果我确定用 G723/G729 吗就固定16k 采样
3 没有模具，无须模具， 10000 块钱 300 x 30块  预期
  后面如果有机会，再改板降成本

可以用25MHz 时钟，然后主时钟输出 到 w5500    100M 或者50M  8k 16k 总能找到一个 误差比较低的


3  PA0-15  用作 地址线  PB0-7 数据   此时用的是  I2S2 half-duplex master     主时钟2输出，  SPI3（片选信号不能用， 可以一直片选状态   uart6 异步) 



------
如果只是 g711 + rtp 那么 F0系列的也是可以的

g723.1 vs g729:


-------rtp-----
或者 rtp 都不用，直接 udp 推流

正因为 udp 不需要回应，所以才可以在  终端不接收的情况下，向它推送数据

ffmpeg  doubango

ffmpeg:
g723_1.c
g723_1dec.c
g723_1enc.c
g723_1.h
g729data.h
g729dec.c
g729.h
g729_parser.c
g729postfilter.c
g729postfilter.h

ffmpeg:
rtp.c  默认支持了 g711 g723 g729  
其他的格式支持靠独立文件 如 rtp_enh264.c

doubango 只支持g729  没有g723

ffmpeg encoders:
 A..... g723_1               G.723.1
 A..... pcm_alaw             PCM A-law / G.711 A-law
 A..... pcm_mulaw            PCM mu-law / G.711 mu-law

decoders:
 A..... g723_1               G.723.1
 A....D g729                 G.729

g723.1 跟 g723 是完全两码事

常用的2个：
g723.1  和 g729a

g723.1:
6.3 kbit/s (using 24 byte frames) using a MPC-MLQ algorithm (MOS 3.9)
5.3 kbit/s (using 20 byte frames) using an ACELP algorithm (MOS 3.62)

g729a:
Sampling frequency 8 kHz/16-bit (80 samples for 10 ms frames)
Fixed bit rate (8 kbit/s 10 ms frames)  比723.1 的 6.3 5.3 大些

理想条件；
g711u  64kbit/s       MOS: 4.45
g729a  8kbit/s        MOS: 4.04
g723.1 6.3kbit/s版本  MOS: 4.08 

-----------
MOS: Mean Opinion Score 主观质量评分 





那 udp 推流和rtp 推流有啥区别


http://blog.csdn.net/leixiaohua1020/article/details/50535230
最小 rtp 实现

