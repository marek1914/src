SAMSUNG 16 EVO: Pi3 字符模式，工作环境

github RPi-Distro/python-sense-hat

login:  pi:raspberry
raspistill -o keychain.jpg -t 2000
raspi-config

Pimoroni Rainbow HAT For Android Things

http://www.geeky-gadgets.com/raspberry-pi-pimoroni-rainbow-hat-for-android-things-19-12-2016/

微雪lcd 3.5B (20170518)
./LCD35B-show  (驱动是一堆脚本，lcd显示后，hdmi无输出)

NOOBS : New Out Of the Box Software
CSI :COMS Sensor Interface

pi3 Wi-Fi and Bluetooth 4.1 (LE), BCM43438

CPU家族/具体型号
Pi1 :BCM2835/BCM2708  ARMv6 arm11
Pi2 :BCM2836/BCM2709  ARMv7 4core A7 900MHz
Pi3 :BCM2837/BCM2710  ARMv8 4core A53 1.2GHz

https://learn.adafruit.com/turning-your-raspberry-pi-zero-into-a-usb-gadget?view=all //Pi zero

使用hdmi转vga连接pi，启动时必须插电源，启动后就不用电源了，why？ 与edid有关

配置hdmi声音
https://www.raspberrypi.org/documentation/configuration/audio-config.md
使用hdmi转vga线，修改config.txt -> hdmi_driver=2

/opt/vc/src/hello_pi/rebuild.sh  一些测试程序

串口：115200 8N1
pi 1/2 : OK
pi 3 不正常，示波器看，波特率好像在变化，稳定后一个bit 14us，波特率72000
"If you've tried to use the UART on the GPIO header of the new Raspberry Pi 3, 
you may have been frustrated to discover that it doesn't work properly."

In /boot/config.txt, add the line core_freq=250. Save and reboot! 
The GPIO UART now operates at the correct baud rate, 
and is available at /dev/ttyS0, and NOT /dev/ttyAMA0 like before.

自己编译的kernel加这句，串口不灵
实验：自己编译内核，echo Hello > /dev/ttyAMA0 //示波器能检测到，并且波特率确实是115200，说明用的是ttyAMA0 但设置的是ttyS0

https://www.raspberrypi.org/documentation/linux/kernel/building.md  //写的好
git clone --depth=1 https://github.com/raspberrypi/linux  //如何保证master分支一直好的？而不用下载3.x 4.x等发布版本？

重编内核：
1 pi上编译 (慢) pi3 + class 10 SD -j4 94min
2 交叉编译 https://github.com/raspberrypi/linux

编译器：
Get the latest Raspberry Pi compiler
包含5套编译器

制作img工具：
mkknlimg //perl
拷贝dtb文件，没安装新的.ko ,hdmi能起来，但串口没打印（已经改了core_freq=250）

安装module，修改250，串口仍然没打印

.ko在ext4分区 4300+

github下载的.zip包，include/linux/i2c-gpio.h 变为软链接，链接目标是这个文件的内容

ARCH=arm CROSS_COMPILE=${CCPREFIX} make bcm2835_defconfig  

pi1    KERNEL=kernel
pi2/3  KERNEL=kernel7 (armv7?)
编译kernel：github/raspberrypi 
RPi_Upstream_Kernel_Compilation //upstream 指kernel.org

键盘错乱
dpkg-reconfigure keyboard-configuration //Re-mapping the keyboard UK改为US

/dev/spidev0.0 and spidev0.1
echo -ne "hello" > /dev/spidev0.0

pin 27/28  I2C ID EEPROM  // ?

https://www.flashrom.org/RaspberryPi

根据README.txt 编译flashrom，需安装：
libpci-dev
libftdi-dev
编译错误，按照提示，取消USB特性

sudo ./flashrom -c "MX25L1605" -p linux_spi:dev=/dev/spidev0.0 -r test.rom

pi 控制spi flash
https://www.raspberrypi.org/documentation/hardware/raspberrypi/spi/README.md   spi接口说明
http://www.mtom.cz/projects/rasp-flashspi/
http://diy.viktak.com/2014/07/how-to-recover-laptop-after-failed-bios.html

wiringpi.com
GPIO Interface lib for Pi, 接口类似 Arduino “wiring” system
git://git.drogon.net/wiringPi

wiringPi 和 bcm2835 C library都提供I2C API函数(靠bcm2835_init函数，用/dev/mem实现)

boot分区包含kernel.img 和
bcm2708-rpi-b.dtb
bcm2708-rpi-b-plus.dtb
bcm2708-rpi-cm.dtb
bcm2709-rpi-2-b.dtb
bcm2710-rpi-3-b.dtb

文档 github.com/raspberrypi/documentation.git
资源 github.com/raspberrypilearning

lan9514 25Mhz 由cpu发出

AV处 U10 GS4vd 5pin  不用DAC和放大器，而用pwm发声
U4 APX803-46SAG : 3-PIN MICROPROCESSOR RESET CIRCUIT 上电或电压低于阀值时发出低电平复位。
U9 AP2331W

EMI4182:common mode filter with ESD protection for HDMI

USB电源，2个口用1组滤波电容(100n+47u)无fuse

Camera Board v2.1 (8MP, 1080p)
Camera Board v1.3 (5MP)

----串口不打印问题：
fail:
8250.nr_uarts=1 dma.dmachans=0x7f35 bcm2708_fb.fbwidth=1920 bcm2708_fb.fbheight=1080 bcm2709.boardrev=0xa22082 bcm2709.serial=0xdaf48062 smsc95xx.macaddr=B8:27:EB:F4:80:62 bcm2708_fb.fbswap=1 bcm2709.uart_clock=48000000 vc_mem.mem_base=0x3dc00000 vc_mem.mem_size=0x3f000000  dwc_otg.lpm_enable=0 console=ttyAMA0,115200 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait

ok:
8250.nr_uarts=1 dma.dmachans=0x7f35 bcm2708_fb.fbwidth=1824 bcm2708_fb.fbheight=984 bcm2709.boardrev=0xa22082 bcm2709.serial=0xdaf48062 smsc95xx.macaddr=B8:27:EB:F4:80:62 bcm2708_fb.fbswap=1 bcm2709.uart_clock=48000000 vc_mem.mem_base=0x3dc00000 vc_mem.mem_size=0x3f000000  dwc_otg.lpm_enable=0 console=ttyS0,115200 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait


ok:
crw------- pi tty         4, 64 ttyS0    //who or tty 命令显示在ttyS0登录
crw-rw---- root dialout 204, 64 ttyAMA0

fail: 修改cmdline console=serial0 为 serial1
root tty 204,64 ttyAMA0
root dialout 4,64 ttyS0
---
fail: 保持cmdline console=serial0
root dialout 204,64 ttyAMA0   //但还是 echo hello >ttyAMA0 串口才有打印
root tty     4,64   ttyS0


uart打不出来
/boot/cmdline.txt  把serial0 改为serial1 有打印了，单无法输入字符

flash 与 eeprom的区别：

IIC flash  at24c01/02/04/08/16   08/16 A0-A2 不全用，而是给了页地址

SPI Flash: 飞好的板子：25L160BE

MXIC: 台湾旺宏   MX25L12835F (128Mbit) 
SPI mode0/mode3
single power supply operation 2.7-3.6v 读写擦（老式eeprom，擦除需要12V高电压）
1bit/2bit/4bit 模式  100000次擦写

实验板：MX25L1608E， #HOLD不拉高检测不到芯片:

#flashrom -p linux_spi:dev=/dev/spidev0.0
Found Macronix flash chip "MX25L1605" (2048 kB, SPI) on linux_spi.
Found Macronix flash chip "MX25L1605A/MX25L1606E/MX25L1608E" (2048 kB, SPI) on linux_spi.
Please specify which chip definition to use with the -c <chipname> option.
需要选择芯片：
#flashrom -p linux_spi:dev=/dev/spidev0.0 -c "MX25L1605A/MX25L1606E/MX25L1608E" -r out.rom //读出2M数据

===
Beaglebone Black/Green

http://192.168.7.2:3000
AM3359

Debian (lxde桌面)
Ubuntu
Cloud9 IDE on Node.js BoneScript library


wifi：
iwlist scan # 扫描wifi

/etc/wpa_supplicant/wpa_supplicant.conf
network={
  ssid="WIFINAME"
  psk="password"
}
或：
/etc/network/interface
auto wlan0
allow-hotplug wlan0
iface wlan0 inet dhcp
wpa-ssid xxx
wpa－psk xxx





-----i2c---
i2c操作，直接用/dev/i2c节点，还是用 gpio库？



--
最新版禁止了ssh：
SSH disabled by default; can be enabled by creating a file with name "ssh" in boot partition

