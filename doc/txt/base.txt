头文件循环包含问题：
c允许，c++不允许
vs:可以生成 包含文件关系图


CMockery


printf:
stdarg.h (man stdarg)
c99: 7.15  Variable arguments va_list(e.g void*)

1 打印阻塞/非阻塞问题
2 开关打印： 不要用宏在代码中控制，而是要把宏放到打印函数里

libncurses
http://clang.llvm.org/docs/ClangFormat.html

Doug Lea malloc(dlmalloc) linux默认malloc内存分配器

ANSI escape codes (escape sequences)

Python，C++(raise)
exception handling代替error code，分离错误处理代码，增加可读性

ragel

valgrind/dmalloc

COLORS-Lscolors

Set different colours for different kinds of files when using the ls command.

Add to ~/.bashrc:

alias ls='ls --color' //based on LS_COLORS
LS_COLORS='di=1:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31:mi=0:ex=35:*.rpm=90'
export LS_COLORS

The second line is the tricky one, and what I have worked out so far has been by trial and error.  
The parameters (di, fi, etc.) refer to different file types.

di = directory
fi = file
ln = symbolic link
pi = fifo file
so = socket file
bd = block (buffered) special file
cd = character (unbuffered) special file
or = symbolic link pointing to a non-existent file (orphan)
mi = non-existent file pointed to by a symbolic link (visible when you type ls -l)
ex = file which is executable (ie. has 'x' set in permissions).

The *.rpm=90 parameter at the end tells ls to display any files ending in .rpm in the specified colour, 
in this case colour 90 (dark grey). This can be applied to any types of files (eg. you could use '*.png=35' 
to make jpeg files appear purple.) As many or as few parameters as you like can go into the LS_COLORS variable, 
as long as the parameters are separated by colons.


0   = default colour
1   = bold
4   = underlined
5   = flashing text
7   = reverse field
类似escape sequence 颜色 红绿黄蓝紫青
x1  = red
x2  = green
x3  = orange
x4  = blue
x5  = purple
x6  = cyan
x7  = grey

